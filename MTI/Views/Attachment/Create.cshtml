@model MTI.Models.Attachments

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("create","attachment", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>الملحقات</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attachmenttype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Attachmenttype, new { htmlAttributes = new { @class = "form-control",id="atttype" } })
                @Html.ValidationMessageFor(model => model.Attachmenttype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control",id="org" } })
                @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input  type='file' name='files[]' multiple id="files"/>
                @Html.HiddenFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control", id = "filepah" } })
                @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts{
    
    <script>
        

        $(document).ready(function () {
            if ($("#org").val().length < 5 || $("#atttype").val().length < 5) {
                $("#files").attr('disabled', 'disabled');
                $("#submit").attr('disabled', 'disabled');
            }
            $("#org").on("change", function () {
               
                    $("#files").removeAttr('disabled');
                $("#submit").removeAttr('disabled', 'disabled');

            });

            $("#submit").click( function () {
                var files = $("#files").get(0).files;  
                var fd = new FormData();
                fd.append('id', $("#StudentID :selected").val());
                fd.append('atttype', $("#atttype").val());
                fd.append('org', $("#org").val());
                for (var i = 0; i < files.length; i++) {
                    fd.append('files[i].name', files[i]);
                }
                uploadfiles(fd);
            });
               

            function uploadfiles(fd) {
                $.ajax({
                    url: "/api/Post/uploadfiles/" + $("#StudentID :selected").text(),
                    method: "post",
                    type:"post",
                    data: fd,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data == null) {
                            toastr.error("لم يتم تسجيل البيانات ");
                            return;
                        }
                        toastr.success(data, "");
                    }

                })
            }

        });

    </script>    
    
    }
