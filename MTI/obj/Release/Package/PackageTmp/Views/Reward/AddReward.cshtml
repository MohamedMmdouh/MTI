@model MTI.Models.Reward
@{
    ViewBag.Title = "AddReward";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1 class="center well"> أضافة مكافأة</h1>
    <div class="field-validation-error">@ViewBag.ErrorMessage</div>
    @using (Html.BeginForm("Add_Reward", "Reward"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="col-sm-12 right well">
        <div class="form-group">
            @Html.LabelFor(m => m.StudentID)
            @Html.TextBoxFor(m => m.StudentID, new { @class = "form-control", id = "studentnum", Type = "number", oninput = "validity.valid||(value='');" })
            @Html.ValidationMessageFor(m => m.StudentID)
            <div id="Error">
                <p id="data"></p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.RewardDate)
            @Html.EditorFor(model => model.RewardDate, new { htmlAttributes = new { @class = "form-control", id = "datepicker1", placeholder = "تاريخ تسجيل العقوبة" } })
            @Html.ValidationMessageFor(m => m.RewardDate)

        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Reward_reason)
            @Html.TextAreaFor(m => m.Reward_reason, new { @class = "form-control", Type = "text" })
            @Html.ValidationMessageFor(m => m.Reward_reason)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WhoApplyIt)
            @Html.TextBoxFor(m => m.WhoApplyIt, new { @class = "form-control", type = "text" })
            @Html.ValidationMessageFor(m => m.WhoApplyIt)

        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.reward)
            @Html.TextBoxFor(m => m.reward, new { @class = "form-control", type = "text" })
            @Html.ValidationMessageFor(m => m.reward)
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.plusGrades)
            @Html.TextBoxFor(m => m.plusGrades, new { @class = "form-control", type = "number", oninput = "validity.valid||(value='');", id = "plus" })
            @Html.ValidationMessageFor(m => m.plusGrades)
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" id="submit" style="background-color:#17a2b8" class="btn btn-primary btn-lg">تسجيل</button>
                <br />
                <br />
                <br />

            </div>
        </div>
    }
</div>
@Html.HiddenFor(m => m.ID, new Dictionary<string, object> { { "data-val", false } })

@section scripts
{

    <script>
        $(document).ready(function () {
            $("#studentnum").keyup(function () {
                var id = $("#studentnum").val();
                if (id.length == 5) {
                    $.ajax({
                        url: "/api/Student/studentnmberexist/" + id,
                        method: "post", type: "POST",
                        success: function (data) {
                            var button = document.getElementById(".submit");

                            if (data.Name != null) {
                                $("#Error #data").text("ينتمي الرقم للطالب " + data.Name);
                                $("#Error #data").css('color', 'green');
                                $("#Error #data").css('font', 'bold');
                                $("#studentnum").css('border-color', 'green');
                            }


                        }, error: function (error) {

                            $("#Error #data").text("لا يوجد طالب بهذا الرقم");
                            $("#Error #data").css('color', 'red');
                            $("#studentnum").css('border-color', 'red');
                        },

                    });
                }
                else {
                    $("#Error #data").text("");
                    $("#studentnum").css('border-color', '');

                }
            });
        });
        $('#plus').keyup(function (e) {
            if ($(this).val() > 100 || $(this).val() < 0) {
                e.preventDefault();
                $(this).val(100);
            }
        });

    </script>

}
